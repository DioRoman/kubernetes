---
- name: Install and configure MicroK8s on Ubuntu 24.04
  hosts: MicroK8S-servers
  become: true
  tasks:
    - name: Ensure snapd is installed
      apt:
        name: snapd
        state: present
        update_cache: true

    - name: Install MicroK8s (latest stable) classic channel
      community.general.snap:
        name: microk8s
        classic: true
        state: present
        channel: stable

    - name: Add user to microk8s group
      user:
        name: "{{ ansible_user }}"
        groups: microk8s
        append: yes

    - name: Start MicroK8s service
      command: microk8s start
      environment:
        PATH: "/snap/bin:{{ ansible_env.PATH }}"
      become: true

    - name: Wait until MicroK8s is ready
      command: microk8s status --wait-ready
      environment:
        PATH: "/snap/bin:{{ ansible_env.PATH }}"
      become: true

    - name: Enable MicroK8s dashboard addon
      command: microk8s enable dashboard
      environment:
        PATH: "/snap/bin:{{ ansible_env.PATH }}"
      become: true

    - name: Set external_ip from inventory (ansible_host)
      set_fact:
        external_ip: "{{ ansible_host | default(inventory_hostname) }}"

    - name: Generate dashboard access token using kubectl create token
      command: microk8s kubectl -n kube-system create token default
      register: dashboard_token
      environment:
        PATH: "/snap/bin:{{ ansible_env.PATH }}"
      become: true

    - name: Output dashboard access info with external IP from inventory
      debug:
        msg:
          - "Dashboard is running at https://{{ external_ip }}:10443"
          - "Use the following token to login:"
          - "{{ dashboard_token.stdout }}"

    - name: Start port forwarding for external dashboard access
      shell: |
        nohup microk8s kubectl port-forward -n kube-system service/kubernetes-dashboard 10443:443 --address 0.0.0.0 > /tmp/k8s-dashboard-port-forward.log 2>&1 &
      args:
        executable: /bin/bash
      async: 10
      poll: 0
      become: false

    - name: Ensure .kube directory exists in user home
      file:
        path: "/home/{{ ansible_user }}/.kube"
        state: directory
        mode: '0700'
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
      become: false

    - name: Copy kubeconfig file to user home for kubectl access
      copy:
        src: /var/snap/microk8s/current/credentials/client.config
        dest: "/home/{{ ansible_user }}/.kube/config"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0600'
        remote_src: true
      become: false

    - name: Copy all yaml files from directory
      copy:
        src: "{{ item }}"
        dest: "/home/{{ ansible_user }}/"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0644'
      with_fileglob:
        - "/mnt/c/Users/rlyst/Netology/kubernetes/1.4/*.yaml"
      become: false
